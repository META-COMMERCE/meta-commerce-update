<!-- 노출 Case : 승인신청/승인거부 -->
<section class="sect">
    <p class="sect__title">{=trans('셀러회원 전환 가입 절차')}</p>
    <ul class="step">
        <li class="step__list input">
            <span class="step__list__tit"><em class="step__list__num">01</em>{=trans('약관동의 및 정보입력')}</span>
            <span class="step__list__desc">{=trans('판매활동에 필요한<br>약관동의와 추가 정보 입력')}</span>
        </li>

        <li class="step__list apply">
            <span class="step__list__tit"><em class="step__list__num">02</em>{=trans('전환신청')}</span>
            <span class="step__list__desc">{=trans('셀러회원으로 전환 신청')}</span>
        </li>

        <li class="step__list check">
            <span class="step__list__tit"><em class="step__list__num">03</em>{=trans('전환검토')}</span>
            <span class="step__list__desc">{=trans('셀러회원 전환 승인 검토')}</span>
        </li>

        <li class="step__list done">
            <span class="step__list__tit"><em class="step__list__num">04</em>{=trans('셀러회원 전환 승인완료')}</span>
            <span class="step__list__desc">{=trans('상품등록 및 판매활동 가능')}</span>
        </li>
    </ul>
</section>

<section class="sect">
    <p class="sect__title border">{=trans('필수 동의 항목')}</p>
    <form id="devForm" class="form-box">
        <dl class="box">
            <dt class="box__title">{=trans('판매 이용약관')} <em class="required-mark"></em></dt>
            <dd class="box__cont">
                <div class="terms-content" style="display: block;">{policyData['use']['contents']}</div>

                <div class="fb__checkbox">
                    <label for="agree-term1" class="agree-area">
                        <input type="checkbox" id="agree-term1" name="policyIx[{policyData['use']['ix']}]" value="Y" class="devRequired">
                        <span>{=trans('동의')}</span>
                    </label>
                </div>
            </dd>
        </dl>
        <div class="agree-area">
        </div>
    </form>
</section>

<section class="sect">
    <p class="sect__title border">{=trans('추가 정보 입력')}</p>

    <form action="" class="inputInfo">
        <!-- 사업자 유형 -->
        <dl class="box">
            <dt class="box__title">{=trans('사업자 유형')} <em class="required-mark"></em></dt>
            <dd class="box__cont business-type">
                <label class="fb__radio">
                    <input type="radio" name="businessType">
                    <span class="fb__radio__text">{=trans('개인사업자')}</span>
                </label>
                
                <label class="fb__radio">
                    <input type="radio" name="businessType">
                    <span class="fb__radio__text">{=trans('법인사업자')}</span>
                </label>
                
                <label class="fb__radio">
                    <input type="radio" name="businessType">
                    <span class="fb__radio__text">{=trans('간이과세자')}</span>
                </label>
                
                <label class="fb__radio">
                    <input type="radio" name="businessType">
                    <span class="fb__radio__text">{=trans('면세사업자')}</span>
                </label>
            </dd>
        </dl>

        <!-- 예금주 -->
        <dl class="box">
            <dt class="box__title" class="">{=trans('예금주')} <em class="required-mark"></em></dt>
            <dd class="box__cont">
                <input type="text" value="">
            </dd>
        </dl>

        <!-- 은행명 -->
        <dl class="box">
            <dt class="box__title">{=trans('은행명')} <em class="required-mark"></em></dt>
            <dd class="box__cont">
                <select>
                    <option value="">{=trans('선택')}</option>
                    <option value="">{=trans('우리은행')}</option>
                    <option value="">{=trans('기업은행')}</option>
                    <option value="">{=trans('신한은행')}</option>
                    <option value="">{=trans('국민은행')}</option>
                </select>
            </dd>
        </dl>
        
        <!-- 계좌번호 -->
        <dl class="box">
            <dt class="box__title">{=trans('계좌번호')} <em class="required-mark"></em></dt>
            <dd class="box__cont">
                <input type="text" value="">
            </dd>
        </dl>
        
        <!-- 계약정보 서류첨부 -->
        <dl class="box license-info">
            <dt class="box__title">{=trans('계약정보 서류첨부')} <em class="required-mark"></em></dt>
            <dd class="box__cont wrap-license-upload">
                
                <div id="devBusinessFileWrap">
                    <input type="file" name="businessFile" id="devBusinessFile1" style="display: none;" title="{=trans('사업자등록증')}" accept="image/*">
                    <input type="text" class="pub-input-text" style="width: 500px;" id="devBusinessFileText1" readonly>
                    <button class="btn-default btn-dark mal10" id="devBusinessFileButton1">{=trans('파일찾기')}</button>
                    <button class="btn-default btn-dark-line delete-btn" id="devBusinessFileDeleteButton1" style="display: none;">{=trans('파일삭제')}
                    </button>
                </div>

                <!-- <div class="upload-img-area" id="devBusinessFileImageWrap" style="display:none;">
                    <img id="devBusinessFileImage">
                    <span class="upload-cancel-btn" id="devBusinessFileDeleteButton"></span>
                </div> -->

                <ul class="desc">
                    <li class="desc__list">{=trans('파일 형식은 이미지 파일(jpg, jpeg, gif, png)로 제출 가능합니다.')}</li>
                    <li class="desc__list">
                        {=trans('첨부하실 서류가 1개 이상인 경우에는 별도 이메일 주소로 추가 전달 가능합니다.(담당자 이메일 : forbiz@forbiz.co.kr)')}
                    </li>
                </ul>
            </dd>
        </dl>
    </form>
</section>

<div class="fb__button type--or">
    <button class="size--04 border--ccc">{=trans(''취소)}</button>
    <button class="size--04 bg--point">{=trans('전환신청')}</button>
</div>


<!-- @TODO: 추후 js 파일로 빼기 -->
<script>
var devCustomerQnaObj = {
    bbsForm: $('#devBbsForm'),
    deleteConfirmOk: function (no) {
        $("#devBusinessFile" + no).val('');
        var fname = $("#devBusinessFile" + no).val();
        if (fname != "" && fname != "undefined" && no > 0) {
            $('#devBusinessFileText' + no).val(fname);
            $('#devBusinessFileButton' + no).text(common.lang.get('write.customer.file.change'));
            $('#devBusinessFileDeleteButton' + no).show();
        } else {
            $('#devBusinessFileText' + no).val('')
            $('#devBusinessFileButton' + no).text(common.lang.get('write.customer.file.find'));
            $('#devBusinessFileDeleteButton' + no).hide();
        }
    },
    initLang: function () {
        common.lang.load('write.customer.file.find', "파일찾기");
        common.lang.load('write.customer.file.change', "파일변경");
        common.lang.load('write.customer.file.confirm.delete', "파일을 삭제하시겠습니까?");
        common.lang.load('write.customer.file.type.check', "파일 형식이 올바르지 않습니다. \n다시 첨부해주세요.");
        common.lang.load('write.customer.file.size.check', "파일 용량이 최대 30MB를 초과했습니다. \n다시 첨부해주세요.");
    },

    initEvent: function () {
        var self = devCustomerQnaObj;

        $('#devBbsRegCancel').click(function (e) {
            e.preventDefault();
            common.noti.confirm(common.lang.get('write.customer.cancel'), function () {
                document.location.href = '/customer';
            });
        });

        $('#devBbsRegSubmit').click(function (e) {
            self.bbsForm.submit();
        });

        $('#devBbsEmailHostSelect').change(function (e) {
            var selectValue = $(this).val();
            var $bbsEmailHost = $('#devBbsEmailHost');

            e.preventDefault();

            $bbsEmailHost.val(selectValue);
            if (selectValue != '') {
                $bbsEmailHost.attr('readonly', true);
            } else {
                $bbsEmailHost.attr('readonly', false);
            }
        });

        $("button[id^='devBusinessFileButton']").click(function (e) {
            e.preventDefault();
            var selectBtn = (this.id).split("Button");
            var inputFile = $("#" + selectBtn['0'] + selectBtn['1']);
            inputFile.trigger('click');
        });

        $("input[id^='devBusinessFile']").change(function (e) {
            var sNo = (this.id).split("devBusinessFile");
            var fname = $("#devBusinessFile" + sNo['1']).val();
            if (fname != "" && fname != "undefined" && sNo['1'] > 0) {
                $('#devBusinessFileText' + sNo['1']).val(fname);
                $('#devBusinessFileButton' + sNo['1']).text(common.lang.get('write.customer.file.change'));
                $('#devBusinessFileDeleteButton' + sNo['1']).show();
            } else {
                $('#devBusinessFileText' + sNo['1']).val('')
                $('#devBusinessFileButton' + sNo['1']).text(common.lang.get('write.customer.file.find'));
                $('#devBusinessFileDeleteButton' + sNo['1']).hide();
            }
        });

        $("button[id^='devBusinessFileDeleteButton']").click(function (e) {
            e.preventDefault();
            var sNo = (this.id).split("devBusinessFileDeleteButton");
            if (common.noti.confirm(common.lang.get('write.customer.file.confirm.delete'))) {
                self.deleteConfirmOk(sNo['1']);
            } else {
                return false;
            }
        });


        $("input[id^='devBusinessFile']").change(function (e) {
            e.preventDefault();
            var allowExt = ['jpg', 'jpeg', 'png', 'gif'];
            var ckExt = false;
            var ckSize = 1024 * 1024 * 3; //30MB

            //$("input[type=file]").each(function(){
            var filesize = $(this)[0].files[0].size;
            var ext = (this.value).split(".");
            var rs = jQuery.inArray(ext['1'].toLowerCase(), allowExt);
            if (this.value != '' && rs == -1) {
                common.noti.alert(common.lang.get('write.customer.file.type.check'));
                ckExt = false;
                var sNo = (this.id).split("devBusinessFile");
                self.deleteConfirmOk(sNo['1']);
                return false;
            } else if (this.value != '' && filesize > ckSize) {
                common.noti.alert(common.lang.get('write.customer.file.size.check'));
                ckExt = false;
                var sNo = (this.id).split("devBusinessFile");
                self.deleteConfirmOk(sNo['1']);
                return false;
            } else {
                var sNo = (this.id).split("devBusinessFile");
                var fname = $("#devBusinessFile" + sNo['1']).val();
                if (fname != "" && fname != "undefined" && sNo['1'] > 0) {
                    $('#devBusinessFileText' + sNo['1']).val(fname);
                    $('#devBusinessFileButton' + sNo['1']).text(common.lang.get('write.customer.file.change'));
                    $('#devBusinessFileDeleteButton' + sNo['1']).show();
                } else {
                    $('#devBusinessFileText' + sNo['1']).val('')
                    $('#devBusinessFileButton' + sNo['1']).text(common.lang.get('write.customer.file.find'));
                    $('#devBusinessFileDeleteButton' + sNo['1']).hide();
                }
            }
            //});
        });
    },
    run: function () {
        var self = devCustomerQnaObj;

        self.initLang();
        self.initEvent();
    }
};

$(function () {
    devCustomerQnaObj.run();
});

</script>